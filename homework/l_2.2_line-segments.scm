(define (make-segment start-point end-point)
  (cons start-point end-point))

(define (start-segment segment)
  (car segment))
(define (end-segment segment)
  (cdr segment))

(define (make-point x y)
  (cons x y))
(define (x-point point)
  (car point))
(define (y-point point)
  (cdr point))

(define (print-point p)
  (display "(")
  (display (x-point p))
  (display ", ")
  (display (y-point p))
  (display ")")
)

(define (midpoint-segment line)
  (define (get-mid t)
    (/ (+ (t (start-segment line)) 
          (t (end-segment line))) 2)
  )
  (let (
    (x (get-mid x-point))
    (y (get-mid y-point))
    )
    (make-point x y)
  )
)

(define point1 (make-point 1 2))
(define point2 (make-point 3 4))
(define line1 (make-segment point1 point2))

